# Django settings
SECRET_KEY=some-random-string
DEBUG=False
ALLOWED_HOSTS=first-url.com,www.first-url.com

# For Django to build the DB connection string
DB_PROTO=postgres
DB_NAME=mordorwide_db
DB_USER=mordorwide_db_user
DB_PASSWORD=mordorwide_db_password
# Host of Postgres container
DB_HOST=mordorwide-db
DB_PORT=5432
# Mainly for SQLite, not needed for a Postgres setup
DB_PARAMS=

# Static files settings in the Django container
STATIC_ROOT=/static

# Email settings (for "fake" production)
DEFAULT_FROM_EMAIL=no-reply@first-url.com
SERVER_EMAIL=admin-name@first-url.com

# Values for *real* production use
# EMAIL_BACKEND=django.core.mail.backends.console.EmailBackend
EMAIL_BACKEND=django.core.mail.backends.smtp.EmailBackend
EMAIL_HOST=live.smtp.your-smtpmail-server.io
EMAIL_PORT=587
EMAIL_USE_TLS=True
EMAIL_HOST_USER=smtp-username
EMAIL_HOST_PASSWORD=smtp-password

# Gunicorn security settings
USE_HTTPS=True
SECURE_SSL_REDIRECT=True
CSRF_COOKIE_SECURE=True
SESSION_COOKIE_SECURE=True
ADMINS="MordorWide Admin <email-address-that-receives-the-admin-mails@first-url.com>"

IMPRINT_TEXT="Text that should be rendered on the impress page (to obfuscate against spam/web crawlers)."

# Let the schemas be created by Django
INIT_SCHEMAS=0
# Set the paths to SSL certs for container setup
PATH_PRIVATE_KEY=/ssl/priv.pem
PATH_PUBLIC_KEY=/ssl/pub.pem

# TURN setup (1 or 0)
TURN_ENABLED=1
# Need to point to host, due to: network_mode: 'host'
TURN_RELAY_INTERNAL_HOST=host.docker.internal
TURN_RELAY_PORT=8001
# Host: mordorwi.de
TURN_RELAY_EXTERNAL_IP=ip-address-to-turn-server

STUN_ENABLED=1
# STUN_* only used if it is enabled
# Host: natneg.mordorwi.de
STUN_RELAY_HOST=ip-address-to-stun-server
STUN_RELAY_PORT=8002
STUN_RELAY_SOURCE_PORT=11900
# This entry is active even if STUN_ENABLED=0
STUN_INTERNAL_SOURCE_PORT=11900

# For TURN container
RELAY_PORT_RANGE_START=40000
RELAY_PORT_RANGE_END=50000
CMD_HOST=0.0.0.0
CMD_PORT=8001
